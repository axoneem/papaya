/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainLayoutImport } from './routes/_mainLayout'
import { Route as IndexImport } from './routes/index'
import { Route as MainLayoutCategoriesImport } from './routes/_mainLayout/categories'
import { Route as MainLayoutAccountsImport } from './routes/_mainLayout/accounts'
import { Route as MainLayoutSettingsIndexImport } from './routes/_mainLayout/settings.index'
import { Route as MainLayoutJournalIndexImport } from './routes/_mainLayout/journal.index'
import { Route as MainLayoutSettingsSectionImport } from './routes/_mainLayout/settings.$section'
import { Route as MainLayoutJournalViewSplatImport } from './routes/_mainLayout/journal.$view.$'

// Create/Update Routes

const MainLayoutRoute = MainLayoutImport.update({
  id: '/_mainLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutCategoriesRoute = MainLayoutCategoriesImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutAccountsRoute = MainLayoutAccountsImport.update({
  id: '/accounts',
  path: '/accounts',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutSettingsIndexRoute = MainLayoutSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutJournalIndexRoute = MainLayoutJournalIndexImport.update({
  id: '/journal/',
  path: '/journal/',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutSettingsSectionRoute = MainLayoutSettingsSectionImport.update({
  id: '/settings/$section',
  path: '/settings/$section',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutJournalViewSplatRoute = MainLayoutJournalViewSplatImport.update(
  {
    id: '/journal/$view/$',
    path: '/journal/$view/$',
    getParentRoute: () => MainLayoutRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_mainLayout': {
      id: '/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_mainLayout/accounts': {
      id: '/_mainLayout/accounts'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof MainLayoutAccountsImport
      parentRoute: typeof MainLayoutImport
    }
    '/_mainLayout/categories': {
      id: '/_mainLayout/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof MainLayoutCategoriesImport
      parentRoute: typeof MainLayoutImport
    }
    '/_mainLayout/settings/$section': {
      id: '/_mainLayout/settings/$section'
      path: '/settings/$section'
      fullPath: '/settings/$section'
      preLoaderRoute: typeof MainLayoutSettingsSectionImport
      parentRoute: typeof MainLayoutImport
    }
    '/_mainLayout/journal/': {
      id: '/_mainLayout/journal/'
      path: '/journal'
      fullPath: '/journal'
      preLoaderRoute: typeof MainLayoutJournalIndexImport
      parentRoute: typeof MainLayoutImport
    }
    '/_mainLayout/settings/': {
      id: '/_mainLayout/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof MainLayoutSettingsIndexImport
      parentRoute: typeof MainLayoutImport
    }
    '/_mainLayout/journal/$view/$': {
      id: '/_mainLayout/journal/$view/$'
      path: '/journal/$view/$'
      fullPath: '/journal/$view/$'
      preLoaderRoute: typeof MainLayoutJournalViewSplatImport
      parentRoute: typeof MainLayoutImport
    }
  }
}

// Create and export the route tree

interface MainLayoutRouteChildren {
  MainLayoutAccountsRoute: typeof MainLayoutAccountsRoute
  MainLayoutCategoriesRoute: typeof MainLayoutCategoriesRoute
  MainLayoutSettingsSectionRoute: typeof MainLayoutSettingsSectionRoute
  MainLayoutJournalIndexRoute: typeof MainLayoutJournalIndexRoute
  MainLayoutSettingsIndexRoute: typeof MainLayoutSettingsIndexRoute
  MainLayoutJournalViewSplatRoute: typeof MainLayoutJournalViewSplatRoute
}

const MainLayoutRouteChildren: MainLayoutRouteChildren = {
  MainLayoutAccountsRoute: MainLayoutAccountsRoute,
  MainLayoutCategoriesRoute: MainLayoutCategoriesRoute,
  MainLayoutSettingsSectionRoute: MainLayoutSettingsSectionRoute,
  MainLayoutJournalIndexRoute: MainLayoutJournalIndexRoute,
  MainLayoutSettingsIndexRoute: MainLayoutSettingsIndexRoute,
  MainLayoutJournalViewSplatRoute: MainLayoutJournalViewSplatRoute,
}

const MainLayoutRouteWithChildren = MainLayoutRoute._addFileChildren(
  MainLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof MainLayoutRouteWithChildren
  '/accounts': typeof MainLayoutAccountsRoute
  '/categories': typeof MainLayoutCategoriesRoute
  '/settings/$section': typeof MainLayoutSettingsSectionRoute
  '/journal': typeof MainLayoutJournalIndexRoute
  '/settings': typeof MainLayoutSettingsIndexRoute
  '/journal/$view/$': typeof MainLayoutJournalViewSplatRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof MainLayoutRouteWithChildren
  '/accounts': typeof MainLayoutAccountsRoute
  '/categories': typeof MainLayoutCategoriesRoute
  '/settings/$section': typeof MainLayoutSettingsSectionRoute
  '/journal': typeof MainLayoutJournalIndexRoute
  '/settings': typeof MainLayoutSettingsIndexRoute
  '/journal/$view/$': typeof MainLayoutJournalViewSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_mainLayout': typeof MainLayoutRouteWithChildren
  '/_mainLayout/accounts': typeof MainLayoutAccountsRoute
  '/_mainLayout/categories': typeof MainLayoutCategoriesRoute
  '/_mainLayout/settings/$section': typeof MainLayoutSettingsSectionRoute
  '/_mainLayout/journal/': typeof MainLayoutJournalIndexRoute
  '/_mainLayout/settings/': typeof MainLayoutSettingsIndexRoute
  '/_mainLayout/journal/$view/$': typeof MainLayoutJournalViewSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/accounts'
    | '/categories'
    | '/settings/$section'
    | '/journal'
    | '/settings'
    | '/journal/$view/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/accounts'
    | '/categories'
    | '/settings/$section'
    | '/journal'
    | '/settings'
    | '/journal/$view/$'
  id:
    | '__root__'
    | '/'
    | '/_mainLayout'
    | '/_mainLayout/accounts'
    | '/_mainLayout/categories'
    | '/_mainLayout/settings/$section'
    | '/_mainLayout/journal/'
    | '/_mainLayout/settings/'
    | '/_mainLayout/journal/$view/$'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainLayoutRoute: typeof MainLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainLayoutRoute: MainLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_mainLayout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_mainLayout": {
      "filePath": "_mainLayout.tsx",
      "children": [
        "/_mainLayout/accounts",
        "/_mainLayout/categories",
        "/_mainLayout/settings/$section",
        "/_mainLayout/journal/",
        "/_mainLayout/settings/",
        "/_mainLayout/journal/$view/$"
      ]
    },
    "/_mainLayout/accounts": {
      "filePath": "_mainLayout/accounts.tsx",
      "parent": "/_mainLayout"
    },
    "/_mainLayout/categories": {
      "filePath": "_mainLayout/categories.tsx",
      "parent": "/_mainLayout"
    },
    "/_mainLayout/settings/$section": {
      "filePath": "_mainLayout/settings.$section.tsx",
      "parent": "/_mainLayout"
    },
    "/_mainLayout/journal/": {
      "filePath": "_mainLayout/journal.index.tsx",
      "parent": "/_mainLayout"
    },
    "/_mainLayout/settings/": {
      "filePath": "_mainLayout/settings.index.tsx",
      "parent": "/_mainLayout"
    },
    "/_mainLayout/journal/$view/$": {
      "filePath": "_mainLayout/journal.$view.$.tsx",
      "parent": "/_mainLayout"
    }
  }
}
ROUTE_MANIFEST_END */
